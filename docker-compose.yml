# Use postgres/example user/password credentials
version: "3.1"
name: "transcendance"

services:
  db:
    image: postgres:15-bullseye
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: louisea
      POSTGRES_DB: mydb
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5434:5432

  test-db:
    image: postgres:15-bullseye
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: louisea
      POSTGRES_DB: mydb
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - test-db-data:/var/lib/postgresql/data
    ports:
      - 5435:5432

    # back:
    #   container_name: back
    #   stdin_open: true
    #   build:
    #     context: ./
    #     dockerfile: ./back/requirements/Dockerfile
    #   depends_on:
    #     - db
    #   restart: on-failure
    #   ports:
    #     - 8080:8080
    #     - 5555:5555

  frontend:
    container_name: client
    build:
      context: ./front
      dockerfile: Dockerfile
    image: react
    ports:
      - "3000:3000"

  backend:
    container_name: backend
    build:
      context: ./back
      dockerfile: Dockerfile
    depends_on:
      - db
    image: server
    environment:
      - POSTGRES_PASSWORD=example
      - POSTGRES_USER=louisea
      - POSTGRES_DB=mydb
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5555:5555"

volumes:
  db-data:
  test-db-data:
