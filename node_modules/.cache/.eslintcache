[{"/Users/louisea/dev/Transcendance42/src/reportWebVitals.js":"1","/Users/louisea/dev/Transcendance42/src/index.tsx":"2","/Users/louisea/dev/Transcendance42/src/App.tsx":"3","/Users/louisea/dev/Transcendance42/src/components/reveal.tsx":"4","/Users/louisea/dev/Transcendance42/src/pages/HomePage.tsx":"5"},{"size":362,"mtime":1684853923325,"results":"6","hashOfConfig":"7"},{"size":249,"mtime":1684855329606,"results":"8","hashOfConfig":"7"},{"size":486,"mtime":1684920860012,"results":"9","hashOfConfig":"7"},{"size":905,"mtime":1684858139622,"results":"10","hashOfConfig":"7"},{"size":569,"mtime":1684862388047,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ftdgx7",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/louisea/dev/Transcendance42/src/reportWebVitals.js",[],[],"/Users/louisea/dev/Transcendance42/src/index.tsx",[],[],[],"/Users/louisea/dev/Transcendance42/src/App.tsx",[],[],"/Users/louisea/dev/Transcendance42/src/components/reveal.tsx",["30"],[],"import { motion, useInView, useAnimation } from 'framer-motion'\nimport { useEffect, useRef } from 'react';\nimport React from 'react';\n\nconst Reveal = ({children, width}) => {\n    const ref = useRef(null)\n    const isInView = useInView(ref, {once: true})\n\n    const mainControls = useAnimation();\n\n    useEffect(() => {\n        if (isInView) {\n            mainControls.start(\"visible\");\n        }\n    }, [isInView]);\n\n    return (\n        <div ref={ref} style={{ position: \"relative\", width}}>\n            <motion.div\n                variants={{\n                    hidden: {opacity: 0, y: 75},\n                    visible: {opacity: 1, y: 0},\n                }}\n                initial=\"hidden\"\n                animate={mainControls}\n                transition={{duration: 0.5, delay: 0.25}}\n            >\n                {children}\n            </motion.div>\n        </div>\n    )\n}\n\nexport default Reveal;",[],"/Users/louisea/dev/Transcendance42/src/pages/HomePage.tsx",[],[],{"ruleId":"31","severity":1,"message":"32","line":15,"column":8,"nodeType":"33","endLine":15,"endColumn":18,"suggestions":"34"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mainControls'. Either include it or remove the dependency array.","ArrayExpression",["35"],{"desc":"36","fix":"37"},"Update the dependencies array to be: [isInView, mainControls]",{"range":"38","text":"39"},[403,413],"[isInView, mainControls]"]